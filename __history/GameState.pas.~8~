unit GameState;

interface

uses State;

type

  TGameState = class (TInterfacedObject, TState)

    private
    tState: TState;

    public
      procedure LevelStarted;
      procedure Died;
      procedure LevelCompleted;

      property State: TState read tState write tState;

      constructor Create;
    end;

implementation

{ TGameState }

uses FailedState, LevelStartState;

constructor TGameState.Create;
begin
// empty constructor
end;

procedure TGameState.Died;
begin
  State := TFailedState.Create;
end;

procedure TGameState.LevelCompleted;
begin
  State := TLevelStartState.Create;
end;

procedure TGameState.LevelStarted;
begin
// do nothing
end;

end.
